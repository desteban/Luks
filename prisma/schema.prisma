// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  lastName      String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  password      String?       @db.Text
  accounts      Account[]
  sessions      Session[]
  actividades   Actividades[]
  gastos        Gastos[]
  // createdAt     DateTime      @default(now())
  // updatedAt     DateTime      @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Actividades {
  id        String   @id @default(cuid())
  nombre    String   @db.VarChar(50)
  userId    String
  createdAt DateTime @default(now())
  // gastos    Gastos[]

  usuario User @relation(fields: [userId], references: [id])
}

model TiposGastos {
  id      Int     @id @default(autoincrement())
  nombre  String  @unique @db.VarChar(30)
  descrip String?
  imagen  String

  gastos Gastos[]
}

model Gastos {
  id          String   @id @default(uuid())
  userId      String
  valor       Decimal  @db.Decimal(10, 2)
  tipoGastoId Int
  // actividadId String?
  createdAt   DateTime @default(now())

  usuario User        @relation(fields: [userId], references: [id])
  tipo    TiposGastos @relation(fields: [tipoGastoId], references: [id])
  // actividad Actividades @relation(fields: [actividadId], references: [id])
}
